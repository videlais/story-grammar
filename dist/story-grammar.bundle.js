/*! For license information please see story-grammar.bundle.js.LICENSE.txt */
!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.StoryGrammar=r():e.StoryGrammar=r()}(this,()=>(()=>{"use strict";var e={"./src/EnglishModifiers.ts":(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.BasicEnglishModifiers=r.AllEnglishModifiers=r.EnglishVerbAgreementModifier=r.PunctuationCleanupModifier=r.EnglishPossessiveModifier=r.EnglishCapitalizationModifier=r.EnglishOrdinalModifier=r.EnglishPluralizationModifier=r.EnglishArticleModifier=void 0;var i=t("./src/modifiers/english/ArticleModifier.ts");Object.defineProperty(r,"EnglishArticleModifier",{enumerable:!0,get:function(){return i.ArticleModifier}});var a=t("./src/modifiers/english/PluralizationModifier.ts");Object.defineProperty(r,"EnglishPluralizationModifier",{enumerable:!0,get:function(){return a.PluralizationModifier}});var s=t("./src/modifiers/english/OrdinalModifier.ts");Object.defineProperty(r,"EnglishOrdinalModifier",{enumerable:!0,get:function(){return s.OrdinalModifier}});var n=t("./src/modifiers/english/CapitalizationModifier.ts");Object.defineProperty(r,"EnglishCapitalizationModifier",{enumerable:!0,get:function(){return n.CapitalizationModifier}}),r.EnglishPossessiveModifier={name:"englishPossessives",condition:e=>/\b\w+\s+possessive\b/i.test(e)||/\b\w+'s?\s+\w/.test(e),transform:e=>(e=e.replace(/\b(\w+)\s+possessive\b/gi,(e,r)=>r.endsWith("s")?r+"'":r+"'s")).replace(/(\w+)'s's/g,"$1's"),priority:6},r.PunctuationCleanupModifier={name:"punctuationCleanup",condition:e=>/\s{2,}/.test(e)||/\s[.!?,:;]/.test(e)||/[.!?,:;]\S/.test(e),transform:e=>(e=(e=(e=e.replace(/\s{2,}/g," ")).replace(/\s([.!?,:;])/g,"$1")).replace(/([.!?,:;])([A-Za-z])/g,"$1 $2")).trim(),priority:1},r.EnglishVerbAgreementModifier={name:"englishVerbAgreement",condition:e=>/\b(he|she|it)\s+are\b/i.test(e)||/\b(they|many|several|few|all|both)\s+is\b/i.test(e)||/\b(he|she|it)\s+have\b/i.test(e)||/\b(they|many|several|few|all|both)\s+has\b/i.test(e),transform:e=>(e=(e=(e=e.replace(/\b(he|she|it)\s+are\b/gi,"$1 is")).replace(/\b(they|many|several|few|all|both)\s+is\b/gi,"$1 are")).replace(/\b(he|she|it)\s+have\b/gi,"$1 has")).replace(/\b(they|many|several|few|all|both)\s+has\b/gi,"$1 have"),priority:5};const l=t("./src/modifiers/english/ArticleModifier.ts"),o=t("./src/modifiers/english/PluralizationModifier.ts"),u=t("./src/modifiers/english/OrdinalModifier.ts"),c=t("./src/modifiers/english/CapitalizationModifier.ts");r.AllEnglishModifiers=[l.ArticleModifier,o.PluralizationModifier,u.OrdinalModifier,c.CapitalizationModifier,r.EnglishPossessiveModifier,r.EnglishVerbAgreementModifier,r.PunctuationCleanupModifier],r.BasicEnglishModifiers=[l.ArticleModifier,o.PluralizationModifier,u.OrdinalModifier]},"./src/Parser.ts":function(e,r,t){var i=this&&this.__createBinding||(Object.create?function(e,r,t,i){void 0===i&&(i=t);var a=Object.getOwnPropertyDescriptor(r,t);a&&!("get"in a?!r.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,i,a)}:function(e,r,t,i){void 0===i&&(i=t),e[i]=r[t]}),a=this&&this.__exportStar||function(e,r){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(r,t)||i(r,e,t)};Object.defineProperty(r,"__esModule",{value:!0}),r.Parser=void 0,a(t("./src/types.ts"),r);var s=t("./src/ParserCore.ts");Object.defineProperty(r,"Parser",{enumerable:!0,get:function(){return s.Parser}})},"./src/ParserCore.ts":(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.Parser=void 0;const i=t("./src/utils/SeededRandom.ts"),a=t("./src/rules/RuleManager.ts"),s=t("./src/core/VariableExpander.ts"),n=t("./src/analysis/ComplexityAnalyzer.ts"),l=t("./src/analysis/ProbabilityAnalyzer.ts"),o=t("./src/validation/GrammarValidator.ts"),u=t("./src/core/ErrorHandler.ts");class c{constructor(){this.modifiers=new Map,this.random=new i.SeededRandom,this.ruleManager=new a.RuleManager,this.variableExpander=new s.VariableExpander(this.ruleManager,this.random),this.complexityAnalyzer=new n.ComplexityAnalyzer(this.ruleManager,this.variableExpander),this.probabilityAnalyzer=new l.ProbabilityAnalyzer(this.ruleManager,this.variableExpander),this.validator=new o.GrammarValidator(this.ruleManager,this.variableExpander),this.errorHandler=new u.ErrorHandler(this.ruleManager,this.validator)}addRule(e,r){this.ruleManager.addRule(e,r)}addRules(e){this.ruleManager.addRules(e)}addFunctionRule(e,r){this.ruleManager.addFunctionRule(e,r)}addWeightedRule(e,r,t){this.ruleManager.addWeightedRule(e,r,t)}addConditionalRule(e,r){this.ruleManager.addConditionalRule(e,r)}addSequentialRule(e,r,t={cycle:!0}){this.ruleManager.addSequentialRule(e,r,t)}addRangeRule(e,r){this.ruleManager.addRangeRule(e,r)}addTemplateRule(e,r){this.ruleManager.addTemplateRule(e,r)}hasRule(e){return this.ruleManager.hasRule(e)}removeRule(e){return this.ruleManager.removeRule(e)}clear(){this.ruleManager.clear()}hasFunctionRule(e){return this.ruleManager.hasFunctionRule(e)}hasWeightedRule(e){return this.ruleManager.hasWeightedRule(e)}hasConditionalRule(e){return this.ruleManager.hasConditionalRule(e)}hasSequentialRule(e){return this.ruleManager.hasSequentialRule(e)}hasRangeRule(e){return this.ruleManager.hasRangeRule(e)}hasTemplateRule(e){return this.ruleManager.hasTemplateRule(e)}removeFunctionRule(e){return this.ruleManager.removeFunctionRule(e)}removeWeightedRule(e){return this.ruleManager.removeWeightedRule(e)}removeConditionalRule(e){return this.ruleManager.removeConditionalRule(e)}removeSequentialRule(e){return this.ruleManager.removeSequentialRule(e)}removeRangeRule(e){return this.ruleManager.removeRangeRule(e)}removeTemplateRule(e){return this.ruleManager.removeTemplateRule(e)}clearFunctionRules(){this.ruleManager.clearFunctionRules()}clearWeightedRules(){this.ruleManager.clearWeightedRules()}clearConditionalRules(){this.ruleManager.clearConditionalRules()}clearSequentialRules(){this.ruleManager.clearSequentialRules()}clearRangeRules(){this.ruleManager.clearRangeRules()}clearTemplateRules(){this.ruleManager.clearTemplateRules()}resetSequentialRule(e){return this.ruleManager.resetSequentialRule(e)}getGrammar(){return this.ruleManager.getGrammar()}addModifier(e){var r;if(!e||"object"!=typeof e)throw new Error("Modifier must be an object");if(!e.name||"string"!=typeof e.name)throw new Error("Modifier must have a name");if("function"!=typeof e.condition)throw new Error("Modifier must have a condition function");if("function"!=typeof e.transform)throw new Error("Modifier must have a transform function");this.modifiers.set(e.name,Object.assign(Object.assign({},e),{priority:null!==(r=e.priority)&&void 0!==r?r:0}))}removeModifier(e){return this.modifiers.delete(e)}hasModifier(e){return this.modifiers.has(e)}getModifiers(){return Array.from(this.modifiers.values()).sort((e,r)=>{var t,i;return(null!==(t=r.priority)&&void 0!==t?t:0)-(null!==(i=e.priority)&&void 0!==i?i:0)})}loadModifier(e){this.addModifier(e)}loadModifiers(e){for(const r of e)this.addModifier(r)}clearModifiers(){this.modifiers.clear()}clearAll(){this.clear(),this.clearModifiers()}parse(e,r=!1){if("string"!=typeof e)throw new Error("Text must be a string");const t=this.variableExpander.expandVariables(e,r);return this.applyModifiers(t,{originalText:e})}parseWithTiming(e,r=!1){const t=Date.now();if("string"!=typeof e)throw new Error("Text must be a string");const i=Date.now(),a=this.variableExpander.expandVariables(e,r),s=Date.now(),n=Date.now(),l=this.applyModifiers(a,{originalText:e}),o=Date.now();return{result:l,timing:{totalMs:Date.now()-t,expansionMs:s-i,modifierMs:o-n}}}safeParse(e,r={}){const{preserveContext:t=!1,validateFirst:i=!0,maxAttempts:a=3}=r;let s=0;for(;s<a;){s++;try{if(i&&1===s){const e=this.validate();if(!e.isValid){let r="Validation failed";return e.missingRules.length>0&&(r=`Validation failed - missing rules: ${e.missingRules.join(", ")}`),{success:!1,error:r,attempts:s,validation:e}}}return{success:!0,result:this.parse(e,t),attempts:s}}catch(r){if(s>=a)return{success:!1,error:this.errorHandler.getHelpfulError(r,{text:e}),attempts:s};if(this.errorHandler.isRecursionError(r)){const e=this.variableExpander.getMaxDepth();this.variableExpander.setMaxDepth(Math.max(10,Math.floor(.7*e)))}}}return{success:!1,error:"Maximum attempts exceeded",attempts:s}}applyModifiers(e,r){let t=e;const i=this.getModifiers();for(const e of i)e.condition(t,r)&&(t=e.transform(t,r));return t}parseBatch(e,r=!0){if(!Array.isArray(e))throw new Error("Texts must be an array");const t=[];for(let i=0;i<e.length;i++){const a=r&&i>0;t.push(this.parse(e[i],a))}return t}generateVariations(e,r,t){if("string"!=typeof e)throw new Error("Text must be a string");if(!Number.isInteger(r)||r<=0)throw new Error("Count must be a positive integer");const i=[],a=this.random.getSeed();try{for(let a=0;a<r;a++)void 0!==t&&this.random.setSeed(t+a),i.push(this.parse(e,!1));return i}finally{null!==a?this.random.setSeed(a):this.random.clearSeed()}}setMaxDepth(e){this.variableExpander.setMaxDepth(e)}getMaxDepth(){return this.variableExpander.getMaxDepth()}setRandomSeed(e){this.random.setSeed(e)}clearRandomSeed(){this.random.clearSeed()}getRandomSeed(){return this.random.getSeed()}clearReferences(){this.variableExpander.clearReferences()}getContext(){return this.variableExpander.getContext()}calculateRuleComplexity(e,r=new Set,t=50){return this.complexityAnalyzer.calculateRuleComplexity(e,r,t)}calculateTotalComplexity(e=50){return this.complexityAnalyzer.calculateTotalComplexity(e)}calculateProbabilities(e,r=50,t=1e3){return this.probabilityAnalyzer.calculateProbabilities(e,r,t)}getMostProbableOutcome(e,r=50,t=1e3){return this.probabilityAnalyzer.getMostProbableOutcome(e,r,t)}getLeastProbableOutcome(e,r=50,t=1e3){return this.probabilityAnalyzer.getLeastProbableOutcome(e,r,t)}validate(){return this.validator.validate()}findVariables(e){return this.variableExpander.findVariables(e)}getHelpfulError(e,r){return this.errorHandler.getHelpfulError(e,r)}getStats(){const e=this.ruleManager.getStats();return{totalRules:e.total,rulesByType:{static:e.static,function:e.function,weighted:e.weighted,conditional:e.conditional,sequential:e.sequential,range:e.range,template:e.template},totalModifiers:this.modifiers.size,maxDepth:this.getMaxDepth(),hasRandomSeed:null!==this.random.getSeed()}}clone(){const e=new c,r=this.getGrammar();e.addRules(r),e.setMaxDepth(this.getMaxDepth());const t=this.getRandomSeed();null!==t&&e.setRandomSeed(t);const i=this.getModifiers();return e.loadModifiers(i),e}exportConfig(){return{grammar:this.getGrammar(),modifiers:this.getModifiers().map(e=>e.name),settings:{maxDepth:this.getMaxDepth(),randomSeed:this.getRandomSeed()}}}optimize(){const e=this.validate(),r=[...e.warnings],t=[];return this.variableExpander.getMaxDepth()>20&&t.push("Consider reducing max depth for better performance."),this.modifiers.size>=15&&r.push(`Many modifiers (${this.modifiers.size}). High-priority modifiers run first.`),t.push(...e.missingRules.concat(e.circularReferences)),{warnings:r,suggestions:t,optimized:!1}}analyzeRules(e){if(e){const r=this.calculateRuleComplexity(e);return{totalComplexity:r.complexity,averageDepth:r.depth,mostComplex:[r.ruleName],suggestions:r.warnings,ruleDetails:{name:r.ruleName,type:r.ruleType,complexity:r.complexity,variables:r.variables,depth:r.depth}}}{const e=this.calculateTotalComplexity(),r=[...e.warnings];return Object.keys(this.ruleManager.getGrammar()).length>50&&r.push("Large number of rules - consider organizing into groups"),e.totalComplexity>100&&r.push("High total complexity - consider simplifying rules"),{totalComplexity:e.totalComplexity,averageDepth:e.averageComplexity,mostComplex:e.mostComplexRules.map(e=>e.ruleName),suggestions:r}}}}r.Parser=c},"./src/analysis/ComplexityAnalyzer.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.ComplexityAnalyzer=void 0,r.ComplexityAnalyzer=class{constructor(e,r){this.ruleManager=e,this.variableExpander=r}calculateRuleComplexity(e,r=new Set,t=50){const i=[],a=new Set;let s="unknown",n=1,l=!0;if(!this.ruleManager.hasRule(e))throw new Error(`Rule '${e}' does not exist`);if(r.has(e))return i.push(`Circular reference detected for rule '${e}'`),{ruleName:e,complexity:1,ruleType:"circular",isFinite:!0,variables:[],depth:r.size,warnings:i};if(r.size>=t)return i.push(`Maximum depth (${t}) reached, complexity may be underestimated`),{ruleName:e,complexity:1,ruleType:"max-depth",isFinite:!0,variables:[],depth:r.size,warnings:i};const o=new Set(r);o.add(e);const u=this.ruleManager.getRuleType(e);switch(s=u||"unknown",u){case"static":n=this.calculateStaticRuleComplexity(e,o,t,a,i);break;case"weighted":n=this.calculateWeightedRuleComplexity(e,o,t,a,i);break;case"function":n=Number.POSITIVE_INFINITY,l=!1,i.push(`Function rule '${e}' has infinite complexity (cannot be calculated)`);break;case"conditional":n=this.calculateConditionalRuleComplexity(e,o,t,a,i);break;case"sequential":n=this.calculateSequentialRuleComplexity(e,o,t,a,i);break;case"range":n=this.calculateRangeRuleComplexity(e);break;case"template":n=this.calculateTemplateRuleComplexity(e,o,t,a,i);break;default:i.push(`Unknown rule type for '${e}'`),n=1}return{ruleName:e,complexity:n,ruleType:s,isFinite:l,variables:Array.from(a),depth:r.size,warnings:i}}calculateTotalComplexity(e=50){const r=this.ruleManager.getAllKeys(),t=[],i=[],a=[];let s=0,n=!0;for(const l of r)try{const r=this.calculateRuleComplexity(l,new Set,e);t.push(r),r.isFinite?s+=r.complexity:n=!1,i.push(...r.warnings),r.warnings.some(e=>e.includes("Circular reference"))&&a.push(l)}catch(e){i.push(`Error calculating complexity for rule '${l}': ${e}`),t.push({ruleName:l,complexity:1,ruleType:"error",isFinite:!0,variables:[],depth:0,warnings:[`Error: ${e}`]})}const l=Array.from(new Set(i)),o=Array.from(new Set(a)),u=[...t].filter(e=>e.isFinite).sort((e,r)=>r.complexity-e.complexity).slice(0,5),c=t.filter(e=>e.isFinite),h=c.length>0?c.reduce((e,r)=>e+r.complexity,0)/c.length:0;return{totalComplexity:n?s:Number.POSITIVE_INFINITY,isFinite:n,ruleCount:r.length,complexityByRule:t,averageComplexity:h,mostComplexRules:u,warnings:l,circularReferences:o}}calculateStaticRuleComplexity(e,r,t,i,a){const s=this.ruleManager.getGrammar()[e];if(!s)return 1;let n=0;for(const l of s){const s=this.variableExpander.findVariables(l);if(0===s.length)n+=1;else{let l=1;for(const n of s)if(i.add(n),r.has(n))a.push(`Circular reference detected for rule '${n}'`),l*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${n}', complexity may be underestimated`),l*=1;else if(this.ruleManager.hasRule(n)){const e=this.calculateRuleComplexity(n,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;l*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${n}' referenced in '${e}'`),l*=1;n+=l}}return n}calculateWeightedRuleComplexity(e,r,t,i,a){const s=this.ruleManager.getWeightedRuleData(e);if(!s)return 1;let n=0;for(const l of s.values){const s=this.variableExpander.findVariables(l);if(0===s.length)n+=1;else{let l=1;for(const n of s)if(i.add(n),r.has(n))a.push(`Circular reference detected for rule '${n}'`),l*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${n}', complexity may be underestimated`),l*=1;else if(this.ruleManager.hasRule(n)){const e=this.calculateRuleComplexity(n,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;l*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${n}' referenced in '${e}'`),l*=1;n+=l}}return n}calculateConditionalRuleComplexity(e,r,t,i,a){const s=this.ruleManager.getConditionalRuleData(e);if(!s)return 1;let n=0;for(const l of s.conditions){let s=0;const o=l.then||l.default||[];for(const n of o){const l=this.variableExpander.findVariables(n);if(0===l.length)s+=1;else{let n=1;for(const s of l)if(i.add(s),r.has(s))a.push(`Circular reference detected for rule '${s}'`),n*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${s}', complexity may be underestimated`),n*=1;else if(this.ruleManager.hasRule(s)){const e=this.calculateRuleComplexity(s,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;n*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${s}' referenced in '${e}'`),n*=1;s+=n}}n+=s}return n}calculateSequentialRuleComplexity(e,r,t,i,a){const s=this.ruleManager.getSequentialRuleData(e);if(!s)return 1;let n=0;for(const l of s.values){const s=this.variableExpander.findVariables(l);if(0===s.length)n+=1;else{let l=1;for(const n of s)if(i.add(n),r.has(n))a.push(`Circular reference detected for rule '${n}'`),l*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${n}', complexity may be underestimated`),l*=1;else if(this.ruleManager.hasRule(n)){const e=this.calculateRuleComplexity(n,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;l*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${n}' referenced in '${e}'`),l*=1;n+=l}}return n}calculateRangeRuleComplexity(e){const r=this.ruleManager.getRangeRuleData(e);if(!r)return 1;const t=r.step||1;return Math.floor((r.max-r.min)/t)+1}calculateTemplateRuleComplexity(e,r,t,i,a){const s=this.ruleManager.getTemplateRuleData(e);if(!s)return 1;let n=1;const l=this.variableExpander.findVariables(s.template);for(const o of l)if(i.add(o),s.variables[o]){const l=s.variables[o];let u=0;for(const s of l){const n=this.variableExpander.findVariables(s);if(0===n.length)u+=1;else{let s=1;for(const l of n)if(i.add(l),r.has(l))a.push(`Circular reference detected for rule '${l}'`),s*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${l}', complexity may be underestimated`),s*=1;else if(this.ruleManager.hasRule(l)){const e=this.calculateRuleComplexity(l,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;s*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${l}' referenced in '${e}'`),s*=1;u+=s}}n*=u}else if(this.ruleManager.hasRule(o))if(r.has(o))a.push(`Circular reference detected for rule '${o}'`),n*=1;else if(r.size>=t)a.push(`Maximum depth (${t}) reached while analyzing '${o}', complexity may be underestimated`),n*=1;else{const e=this.calculateRuleComplexity(o,r,t);if(!e.isFinite)return Number.POSITIVE_INFINITY;n*=e.complexity,a.push(...e.warnings)}else a.push(`Missing rule '${o}' referenced in '${e}'`),n*=1;return n}}},"./src/analysis/ProbabilityAnalyzer.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.ProbabilityAnalyzer=void 0,r.ProbabilityAnalyzer=class{constructor(e,r){this.ruleManager=e,this.variableExpander=r}createProbabilityResult(e,r,t=[],i=[]){return{outcome:e,probability:r,variables:t,probabilityTree:i}}calculateProbabilities(e,r=50,t=1e3){if(!this.ruleManager.hasRule(e))throw new Error(`Rule '${e}' does not exist`);const i=[],a=this.calculateRuleProbabilities(e,new Set,r,t,i);if(0===a.length)return{ruleName:e,outcomes:[],totalOutcomes:0,mostProbable:[],leastProbable:[],averageProbability:0,entropy:0,isFinite:!0,warnings:i};const s=a.sort((e,r)=>r.probability-e.probability),n=a.reduce((e,r)=>r.probability>0?e-r.probability*Math.log2(r.probability):e,0),l=s.slice(0,10),o=s.slice(-10).reverse(),u=a.length>0?a.reduce((e,r)=>e+r.probability,0)/a.length:0;return{ruleName:e,outcomes:s,totalOutcomes:a.length,mostProbable:l,leastProbable:o,averageProbability:u,entropy:n,isFinite:!0,warnings:i}}getMostProbableOutcome(e,r=50,t=1e3){return this.calculateProbabilities(e,r,t).mostProbable[0]||null}getLeastProbableOutcome(e,r=50,t=1e3){return this.calculateProbabilities(e,r,t).leastProbable[0]||null}calculateRuleProbabilities(e,r,t,i,a){if(r.has(e))return a.push(`Circular reference detected for rule '${e}'`),[this.createProbabilityResult(e,1)];if(r.size>=t)return a.push(`Maximum depth (${t}) reached for rule '${e}'`),[this.createProbabilityResult(e,1)];const s=new Set(r);switch(s.add(e),this.ruleManager.getRuleType(e)){case"static":return this.calculateStaticRuleProbabilities(e,s,t,i,a);case"weighted":return this.calculateWeightedRuleProbabilities(e,s,t,i,a);case"range":return this.calculateRangeRuleProbabilities(e);case"template":return this.calculateTemplateRuleProbabilities(e,s,t,i,a);case"sequential":return this.calculateSequentialRuleProbabilities(e,s,t,i,a);case"conditional":return this.calculateConditionalRuleProbabilities(e,s,t,i,a);case"function":return a.push(`Function rule '${e}' has dynamic outcomes - cannot calculate exact probabilities`),[this.createProbabilityResult(`[function:${e}]`,1)];default:return a.push(`Unknown rule type for '${e}'`),[this.createProbabilityResult(e,1)]}}calculateStaticRuleProbabilities(e,r,t,i,a){const s=this.ruleManager.getGrammar()[e];if(!s||0===s.length)return[];const n=[],l=1/s.length;for(const o of s){const s=this.variableExpander.findVariables(o);if(0===s.length)n.push(this.createProbabilityResult(o,l));else{const e=this.expandVariablesWithProbabilities(o,s,l,r,t,i,a);n.push(...e)}if(n.length>=i){a.push(`Maximum outcomes (${i}) reached for rule '${e}'`);break}}return n}calculateWeightedRuleProbabilities(e,r,t,i,a){const s=this.ruleManager.getWeightedRuleData(e);if(!s)return[];const n=[],l=s.weights.reduce((e,r)=>e+r,0);for(let o=0;o<s.values.length;o++){const u=s.values[o],c=s.weights[o]/l,h=this.variableExpander.findVariables(u);if(0===h.length)n.push(this.createProbabilityResult(u,c));else{const e=this.expandVariablesWithProbabilities(u,h,c,r,t,i,a);n.push(...e)}if(n.length>=i){a.push(`Maximum outcomes (${i}) reached for rule '${e}'`);break}}return n}calculateRangeRuleProbabilities(e){const r=this.ruleManager.getRangeRuleData(e);if(!r)return[];const t=[],i=r.step||1,a=1/(Math.floor((r.max-r.min)/i)+1);for(let e=r.min;e<=r.max;e+=i){const i="integer"===r.type?e.toString():e.toFixed(2);t.push(this.createProbabilityResult(i,a))}return t}calculateTemplateRuleProbabilities(e,r,t,i,a){var s;const n=this.ruleManager.getTemplateRuleData(e);if(!n)return[];let l=[{value:n.template,probability:1}];for(const[s,o]of Object.entries(n.variables)){const n=[],u=1/o.length;for(const c of l){for(const l of o){const o=c.value.replace(new RegExp(`%${s}%`,"g"),l),h=this.variableExpander.findVariables(l);if(h.length>0){const e=this.expandVariablesWithProbabilities(o,h,c.probability*u,r,t,i,a);for(const r of e)n.push({value:r.outcome,probability:r.probability})}else n.push({value:o,probability:c.probability*u});if(n.length>=i){a.push(`Maximum outcomes (${i}) reached for template rule '${e}'`);break}}if(n.length>=i)break}if(l=n,l.length>=i)break}const o=this.variableExpander.findVariables((null===(s=l[0])||void 0===s?void 0:s.value)||"");if(o.length>0){const e=[];for(const s of l){const n=this.expandVariablesWithProbabilities(s.value,o,s.probability,r,t,i,a);for(const r of n)e.push({value:r.outcome,probability:r.probability});if(e.length>=i)break}l=e}return l.map(e=>this.createProbabilityResult(e.value,e.probability))}calculateSequentialRuleProbabilities(e,r,t,i,a){const s=this.ruleManager.getSequentialRuleData(e);if(!s)return[];const n=[],l=1/s.values.length;for(const o of s.values){const s=this.variableExpander.findVariables(o);if(0===s.length)n.push(this.createProbabilityResult(o,l));else{const e=this.expandVariablesWithProbabilities(o,s,l,r,t,i,a);n.push(...e)}if(n.length>=i){a.push(`Maximum outcomes (${i}) reached for rule '${e}'`);break}}return n}calculateConditionalRuleProbabilities(e,r,t,i,a){const s=this.ruleManager.getConditionalRuleData(e);if(!s)return[];const n=[],l=1/s.conditions.length;for(const o of s.conditions){const s=o.then||o.default||[],u=l/s.length;for(const l of s){const s=this.variableExpander.findVariables(l);if(0===s.length)n.push(this.createProbabilityResult(l,u));else{const e=this.expandVariablesWithProbabilities(l,s,u,r,t,i,a);n.push(...e)}if(n.length>=i){a.push(`Maximum outcomes (${i}) reached for rule '${e}'`);break}}if(n.length>=i)break}return n}expandVariablesWithProbabilities(e,r,t,i,a,s,n){if(0===r.length)return[this.createProbabilityResult(e,t)];let l=[{value:e,probability:t}];for(const e of r){const r=[];if(i.has(e)){n.push(`Circular reference detected for rule '${e}'`);for(const t of l)r.push({value:t.value.replace(new RegExp(`%${e}%`,"g"),`[circular:${e}]`),probability:t.probability});l=r;continue}if(i.size>=a){n.push(`Maximum depth (${a}) reached for rule '${e}'`);for(const t of l)r.push({value:t.value.replace(new RegExp(`%${e}%`,"g"),`[max-depth:${e}]`),probability:t.probability});l=r;continue}if(!this.ruleManager.hasRule(e)){n.push(`Missing rule '${e}' referenced in expansion`);for(const t of l)r.push({value:t.value.replace(new RegExp(`%${e}%`,"g"),`[missing:${e}]`),probability:t.probability});l=r;continue}if("function"===this.ruleManager.getRuleType(e)){n.push(`Function rule '${e}' has dynamic outcomes - cannot calculate exact probabilities`);for(const t of l)r.push({value:t.value.replace(new RegExp(`%${e}%`,"g"),`[function:${e}]`),probability:t.probability});l=r;continue}const t=this.calculateRuleProbabilities(e,new Set(i),a,s,n);for(const i of l){for(const a of t){const t=i.value.replace(new RegExp(`%${e}%`,"g"),a.outcome),l=i.probability*a.probability,o={ruleName:e,value:a.outcome,probability:a.probability,children:a.probabilityTree||[]};if(r.push({value:t,probability:l,probabilityTree:[o]}),r.length>=s){n.push(`Maximum outcomes (${s}) reached during expansion`);break}}if(r.length>=s)break}if(l=r,l.length>=s)break}return l.map(e=>this.createProbabilityResult(e.value,e.probability,r,e.probabilityTree||[]))}}},"./src/core/ErrorHandler.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.ErrorHandler=void 0,r.ErrorHandler=class{constructor(e,r){this.ruleManager=e,this.validator=r}getHelpfulError(e,r){const t=[];if(t.push(e.message),t.push(""),this.isRecursionError(e))t.push("Suggestions:"),t.push("• Check for circular references in your grammar rules"),t.push("• Use validate() method to detect circular dependencies"),t.push("• Consider increasing maxDepth if your grammar is legitimately deep"),t.push("• Try reducing the maxDepth with setMaxDepth()"),t.push("• Use @variable syntax to reference previously generated values"),(null==r?void 0:r.ruleName)&&(t.push(""),t.push(`Rule name: ${r.ruleName}`),t.push(`The rule '${r.ruleName}' may be causing infinite recursion`));else if(this.isFunctionRuleError(e))t.push("Suggestions:"),t.push("• Function rules must return string arrays"),t.push("• Check that your function rule returns an array of strings"),t.push("• Check your function rule implementation"),t.push("• Ensure function doesn't throw exceptions"),t.push("• Add error handling within your function rule"),t.push("• Test function rule independently before adding to parser");else if(this.isWeightError(e))t.push("Suggestions:"),t.push("• Ensure all weights are positive numbers"),t.push("• Verify that weights sum to exactly 1.0"),t.push("• Ensure all weights in weighted rules add up to exactly 1.0"),t.push("• Check that values and weights arrays have the same length"),t.push("• Use helper: weights = [0.5, 0.3, 0.2] for three items");else if(this.isMissingRuleError(e)){if(t.push("Suggestions:"),t.push("• Check that all referenced rules are defined"),t.push("• Use validate() method to find missing rules"),null==r?void 0:r.text){const e=this.validator.validateText(r.text);e.length>0&&t.push(`• Missing rules detected: ${e.join(", ")}`)}}else t.push("Suggestions:"),t.push("• Run validate() method to check for grammar issues"),t.push("• Check that all referenced rules exist"),t.push("• Ensure rule values are properly formatted"),t.push("• Review recent changes to grammar rules");t.push("");const i=this.validator.validate();if(i.isValid||(t.push("Validation Issues:"),i.missingRules.length>0&&t.push(`• Missing rules: ${i.missingRules.join(", ")}`),i.circularReferences.length>0&&t.push(`• Circular references: ${i.circularReferences.join(", ")}`),i.emptyRules.length>0&&t.push(`• Empty rules: ${i.emptyRules.join(", ")}`),t.push("")),r&&(r.text&&t.push(`Text being parsed: "${r.text}"`),r.ruleName)){t.push(`Rule name: ${r.ruleName}`);const e=this.ruleManager.getRuleType(r.ruleName);e&&t.push(`Rule type: ${e}`)}return t.join("\n")}isRecursionError(e){const r=e.message.toLowerCase();return r.includes("recursion")||r.includes("circular")||r.includes("depth")||r.includes("maximum call stack")}isFunctionRuleError(e){const r=e.message.toLowerCase();return r.includes("function rule")||r.includes("function")&&r.includes("failed")||r.includes("function must return")}isWeightError(e){const r=e.message.toLowerCase();return r.includes("weight")||r.includes("sum to 1")||r.includes("probability")}isMissingRuleError(e){const r=e.message.toLowerCase();return r.includes("rule")&&r.includes("not found")||r.includes("rule")&&r.includes("does not exist")||r.includes("missing rule")||r.includes("undefined rule")}createMissingRuleError(e){return new Error(`Rule '${e}' does not exist. Use addRule() to define it first.`)}createCircularReferenceError(e){return new Error(`Circular reference detected in rule '${e}'. This creates infinite recursion.`)}createFunctionRuleError(e,r){return new Error(`Function rule '${e}' failed: ${r.message}`)}createWeightValidationError(e){return new Error(`Weight validation failed: ${e}`)}createRecursionDepthError(e){return new Error(`Maximum recursion depth of ${e} exceeded. This may indicate circular references in your grammar rules.`)}}},"./src/core/VariableExpander.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.VariableExpander=void 0,r.VariableExpander=class{constructor(e,r){this.ruleManager=e,this.random=r,this.variablePattern=/%([^%]+)%/g,this.referenceValues=new Map,this.currentContext={},this.maxDepth=100}setMaxDepth(e){if("number"!=typeof e||e<1)throw new Error("Max depth must be at least 1");this.maxDepth=e}getMaxDepth(){return this.maxDepth}clearContext(){this.currentContext={},this.referenceValues.clear()}getContext(){return Object.assign({},this.currentContext)}clearReferences(){this.referenceValues.clear(),this.currentContext={}}expandVariables(e,r=!1){return r||this.clearContext(),this.expandVariablesRecursive(e,0)}expandVariablesRecursive(e,r){if(r>=this.maxDepth)throw new Error(`Maximum recursion depth of ${this.maxDepth} exceeded. This may indicate circular references in your grammar rules.`);return this.variablePattern.lastIndex=0,e.replace(this.variablePattern,(e,t)=>{if(t.startsWith("@")){const e=t.substring(1),r=this.referenceValues.get(e);if(void 0!==r)return r;t=e}const i=this.ruleManager.generateValue(t,this.currentContext,this.random);return null===i?e:(this.currentContext[t]=i,this.referenceValues.set(t,i),this.expandVariablesRecursive(i,r+1))})}findVariables(e){const r=new Set,t=new RegExp(this.variablePattern.source,"g");let i;for(;null!==(i=t.exec(e));)r.add(i[1]);return Array.from(r)}findMissingVariables(e){const r=this.findVariables(e),t=[];for(const e of r)e.startsWith("@")||this.ruleManager.hasRule(e)||t.push(e);return t}findCircularReferences(e,r=new Set){const t=[];if(e)this.checkRuleForCircularReferences(e,r,t);else{const e=this.ruleManager.getAllKeys();for(const r of e)this.checkRuleForCircularReferences(r,new Set,t)}return t}checkRuleForCircularReferences(e,r,t){if(r.has(e))return void t.push(e);r.add(e);const i=this.ruleManager.generateValue(e,{},this.random);if(i){const e=this.findVariables(i);for(const i of e)!i.startsWith("@")&&this.ruleManager.hasRule(i)&&this.checkRuleForCircularReferences(i,new Set(r),t)}r.delete(e)}}},"./src/index.ts":function(e,r,t){var i,a=this&&this.__createBinding||(Object.create?function(e,r,t,i){void 0===i&&(i=t);var a=Object.getOwnPropertyDescriptor(r,t);a&&!("get"in a?!r.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,i,a)}:function(e,r,t,i){void 0===i&&(i=t),e[i]=r[t]}),s=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),n=this&&this.__exportStar||function(e,r){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(r,t)||a(r,e,t)},l=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var r=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[r.length]=t);return r},i(e)},function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t=i(e),n=0;n<t.length;n++)"default"!==t[n]&&a(r,e,t[n]);return s(r,e),r});Object.defineProperty(r,"__esModule",{value:!0}),r.StoryGrammar=r.BasicEnglishModifiers=r.AllEnglishModifiers=r.PunctuationCleanupModifier=r.EnglishVerbAgreementModifier=r.EnglishPossessiveModifier=r.EnglishCapitalizationModifier=r.EnglishOrdinalModifier=r.EnglishPluralizationModifier=r.EnglishArticleModifier=r.Modifiers=r.Parser=void 0;var o=t("./src/Parser.ts");Object.defineProperty(r,"Parser",{enumerable:!0,get:function(){return o.Parser}}),n(t("./src/types.ts"),r),r.Modifiers=l(t("./src/modifiers/index.ts"));var u=t("./src/EnglishModifiers.ts");Object.defineProperty(r,"EnglishArticleModifier",{enumerable:!0,get:function(){return u.EnglishArticleModifier}}),Object.defineProperty(r,"EnglishPluralizationModifier",{enumerable:!0,get:function(){return u.EnglishPluralizationModifier}}),Object.defineProperty(r,"EnglishOrdinalModifier",{enumerable:!0,get:function(){return u.EnglishOrdinalModifier}}),Object.defineProperty(r,"EnglishCapitalizationModifier",{enumerable:!0,get:function(){return u.EnglishCapitalizationModifier}}),Object.defineProperty(r,"EnglishPossessiveModifier",{enumerable:!0,get:function(){return u.EnglishPossessiveModifier}}),Object.defineProperty(r,"EnglishVerbAgreementModifier",{enumerable:!0,get:function(){return u.EnglishVerbAgreementModifier}}),Object.defineProperty(r,"PunctuationCleanupModifier",{enumerable:!0,get:function(){return u.PunctuationCleanupModifier}}),Object.defineProperty(r,"AllEnglishModifiers",{enumerable:!0,get:function(){return u.AllEnglishModifiers}}),Object.defineProperty(r,"BasicEnglishModifiers",{enumerable:!0,get:function(){return u.BasicEnglishModifiers}});var c=t("./src/Parser.ts");Object.defineProperty(r,"StoryGrammar",{enumerable:!0,get:function(){return c.Parser}})},"./src/modifiers/english/ArticleModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.ArticleModifier=void 0,r.ArticleModifier={name:"englishArticles",condition:e=>/\ba\s+[aeiouAEIOU]/.test(e),transform:e=>e.replace(/\ba(\s+)([aeiouAEIOU][a-z]*)/gi,"an$1$2"),priority:10}},"./src/modifiers/english/CapitalizationModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.CapitalizationModifier=void 0,r.CapitalizationModifier={name:"englishCapitalization",condition:e=>/[.!?]\s+[a-z]/.test(e),transform:e=>e.replace(/([.!?]\s+)([a-z])/g,(e,r,t)=>r+t.toUpperCase()),priority:7}},"./src/modifiers/english/OrdinalModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.OrdinalModifier=void 0,r.OrdinalModifier={name:"englishOrdinals",condition:e=>/\b\d+\b/.test(e),transform:e=>e.replace(/\b(\d+)\b/g,(e,r)=>{const t=parseInt(r,10),i=t%100;if(11===i||12===i||13===i)return r+"th";switch(t%10){case 1:return r+"st";case 2:return r+"nd";case 3:return r+"rd";default:return r+"th"}}),priority:8}},"./src/modifiers/english/PluralizationModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.PluralizationModifier=void 0,r.PluralizationModifier={name:"englishPluralization",condition:e=>/\b(many|several|multiple|some|few|all|both|various|numerous|[2-9]\d*|\d*[02-9])\s+[a-zA-Z]+/i.test(e)||/\b(two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\s+[a-zA-Z]+/i.test(e)||/\b(zero|no)\s+[a-zA-Z]+/i.test(e),transform:e=>e.replace(/\b(many|several|multiple|some|few|all|both|various|numerous|zero|no|[2-9]\d*|\d*[02-9]|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\s+([a-zA-Z]+)\b/gi,(e,r,t)=>{const i=function(e){const r=e.toLowerCase(),t={addendum:"addenda",aircraft:"aircraft",alumna:"alumnae",alumnus:"alumni",analysis:"analyses",antenna:"antennae",antithesis:"antitheses",apex:"apices",appendix:"appendices",axis:"axes",bacillus:"bacilli",bacterium:"bacteria",basis:"bases",beau:"beaux",bison:"bison",bureau:"bureaux",cactus:"cacti",château:"châteaux",child:"children",codex:"codices",concerto:"concerti",corpus:"corpora",crisis:"crises",criterion:"criteria",curriculum:"curricula",datum:"data",deer:"deer",diagnosis:"diagnoses",die:"dice",dwarf:"dwarves",ellipsis:"ellipses",erratum:"errata",fez:"fezzes",fish:"fish",focus:"foci",foot:"feet",formula:"formulae",fungus:"fungi",genus:"genera",goose:"geese",graffito:"graffiti",grouse:"grouse",half:"halves",hoof:"hooves",hypothesis:"hypotheses",index:"indices",larva:"larvae",libretto:"libretti",loaf:"loaves",locus:"loci",louse:"lice",man:"men",matrix:"matrices",medium:"media",memorandum:"memoranda",minutia:"minutiae",moose:"moose",mouse:"mice",nebula:"nebulae",nucleus:"nuclei",oasis:"oases",offspring:"offspring",opus:"opera",ovum:"ova",ox:"oxen",parenthesis:"parentheses",person:"people",phenomenon:"phenomena",phylum:"phyla",quiz:"quizzes",radius:"radii",referendum:"referenda",salmon:"salmon",scarf:"scarves",self:"selves",series:"series",sheep:"sheep",shrimp:"shrimp",species:"species",stimulus:"stimuli",stratum:"strata",swine:"swine",syllabus:"syllabi",symposium:"symposia",synopsis:"synopses",tableau:"tableaux",thesis:"theses",thief:"thieves",tooth:"teeth",trout:"trout",tuna:"tuna",vertebra:"vertebrae",vertex:"vertices",vita:"vitae",vortex:"vortices",wharf:"wharves",wife:"wives",wolf:"wolves",woman:"women"};return t[r]?(a=t[r],(i=e)===i.toUpperCase()?a.toUpperCase():i[0]===i[0].toUpperCase()?a.charAt(0).toUpperCase()+a.slice(1):a):/[sxz]$/.test(r)||/[sc]h$/.test(r)?e+"es":/[bcdfghjklmnpqrstvwxz]y$/i.test(r)?e.slice(0,-1)+"ies":/[aeiou]y$/i.test(r)?e+"s":/fe?$/i.test(r)?["belief","chief","cliff","proof","roof","safe","chef","handkerchief"].includes(r)?e+"s":e.replace(/fe?$/i,"ves"):/[bcdfghjklmnpqrstvwxz]o$/i.test(r)?["photo","piano","halo","disco","studio","radio","video","auto","memo","pro","casino","patio","portfolio","logo","commando","solo","soprano","alto","kimono"].includes(r)?e+"s":e+"es":(/[aeiou]o$/i.test(r),e+"s");var i,a}(t);return`${r} ${i}`}),priority:4}},"./src/modifiers/english/PossessiveModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.PossessiveModifier=void 0,r.PossessiveModifier={name:"englishPossessive",condition:e=>e.includes("POSSESSIVE"),transform:e=>e.replace(/(\w+)POSSESSIVE/g,(e,r)=>r.endsWith("s")?r+"'":r+"'s"),priority:6}},"./src/modifiers/english/PunctuationCleanupModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.PunctuationCleanupModifier=void 0,r.PunctuationCleanupModifier={name:"englishPunctuationCleanup",condition:e=>/\s+[,.!?;:]|\s{2,}/.test(e),transform:e=>(e=(e=e.replace(/\s+([,.!?;:])/g,"$1")).replace(/\s{2,}/g," ")).replace(/([.!?])([A-Z])/g,"$1 $2"),priority:9}},"./src/modifiers/english/VerbAgreementModifier.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.VerbAgreementModifier=void 0,r.VerbAgreementModifier={name:"englishVerbAgreement",condition:e=>/\b(he|she|it|\w+(?:ing|ed))\s+are\b/i.test(e)||/\b(they|we|you|\w+s)\s+is\b/i.test(e),transform:e=>(e=e.replace(/\b(he|she|it)\s+are\b/gi,"$1 is")).replace(/\b(they|we|you)\s+is\b/gi,"$1 are"),priority:5}},"./src/modifiers/english/index.ts":(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.BasicEnglishModifiers=r.AllEnglishModifiers=r.PunctuationCleanupModifier=r.VerbAgreementModifier=r.PossessiveModifier=r.CapitalizationModifier=r.OrdinalModifier=r.PluralizationModifier=r.ArticleModifier=void 0;var i=t("./src/modifiers/english/ArticleModifier.ts");Object.defineProperty(r,"ArticleModifier",{enumerable:!0,get:function(){return i.ArticleModifier}});var a=t("./src/modifiers/english/PluralizationModifier.ts");Object.defineProperty(r,"PluralizationModifier",{enumerable:!0,get:function(){return a.PluralizationModifier}});var s=t("./src/modifiers/english/OrdinalModifier.ts");Object.defineProperty(r,"OrdinalModifier",{enumerable:!0,get:function(){return s.OrdinalModifier}});var n=t("./src/modifiers/english/CapitalizationModifier.ts");Object.defineProperty(r,"CapitalizationModifier",{enumerable:!0,get:function(){return n.CapitalizationModifier}});var l=t("./src/modifiers/english/PossessiveModifier.ts");Object.defineProperty(r,"PossessiveModifier",{enumerable:!0,get:function(){return l.PossessiveModifier}});var o=t("./src/modifiers/english/VerbAgreementModifier.ts");Object.defineProperty(r,"VerbAgreementModifier",{enumerable:!0,get:function(){return o.VerbAgreementModifier}});var u=t("./src/modifiers/english/PunctuationCleanupModifier.ts");Object.defineProperty(r,"PunctuationCleanupModifier",{enumerable:!0,get:function(){return u.PunctuationCleanupModifier}});const c=t("./src/modifiers/english/ArticleModifier.ts"),h=t("./src/modifiers/english/PluralizationModifier.ts"),d=t("./src/modifiers/english/OrdinalModifier.ts"),f=t("./src/modifiers/english/CapitalizationModifier.ts"),g=t("./src/modifiers/english/PossessiveModifier.ts"),p=t("./src/modifiers/english/VerbAgreementModifier.ts"),m=t("./src/modifiers/english/PunctuationCleanupModifier.ts");r.AllEnglishModifiers=[c.ArticleModifier,h.PluralizationModifier,d.OrdinalModifier,f.CapitalizationModifier,g.PossessiveModifier,p.VerbAgreementModifier,m.PunctuationCleanupModifier],r.BasicEnglishModifiers=[c.ArticleModifier,h.PluralizationModifier,d.OrdinalModifier]},"./src/modifiers/index.ts":function(e,r,t){var i,a=this&&this.__createBinding||(Object.create?function(e,r,t,i){void 0===i&&(i=t);var a=Object.getOwnPropertyDescriptor(r,t);a&&!("get"in a?!r.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,i,a)}:function(e,r,t,i){void 0===i&&(i=t),e[i]=r[t]}),s=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),n=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var r=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[r.length]=t);return r},i(e)},function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t=i(e),n=0;n<t.length;n++)"default"!==t[n]&&a(r,e,t[n]);return s(r,e),r});Object.defineProperty(r,"__esModule",{value:!0}),r.AllEnglishModifiers=r.PunctuationCleanupModifier=r.VerbAgreementModifier=r.PossessiveModifier=r.CapitalizationModifier=r.OrdinalModifier=r.PluralizationModifier=r.ArticleModifier=r.English=void 0,r.English=n(t("./src/modifiers/english/index.ts"));var l=t("./src/modifiers/english/index.ts");Object.defineProperty(r,"ArticleModifier",{enumerable:!0,get:function(){return l.ArticleModifier}}),Object.defineProperty(r,"PluralizationModifier",{enumerable:!0,get:function(){return l.PluralizationModifier}}),Object.defineProperty(r,"OrdinalModifier",{enumerable:!0,get:function(){return l.OrdinalModifier}}),Object.defineProperty(r,"CapitalizationModifier",{enumerable:!0,get:function(){return l.CapitalizationModifier}}),Object.defineProperty(r,"PossessiveModifier",{enumerable:!0,get:function(){return l.PossessiveModifier}}),Object.defineProperty(r,"VerbAgreementModifier",{enumerable:!0,get:function(){return l.VerbAgreementModifier}}),Object.defineProperty(r,"PunctuationCleanupModifier",{enumerable:!0,get:function(){return l.PunctuationCleanupModifier}}),Object.defineProperty(r,"AllEnglishModifiers",{enumerable:!0,get:function(){return l.AllEnglishModifiers}})},"./src/rules/AdvancedRuleManagers.ts":(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.TemplateRuleManager=r.RangeRuleManager=r.SequentialRuleManager=r.ConditionalRuleManager=void 0;const i=t("./src/rules/BaseRuleManager.ts");class a extends i.BaseRuleManager{addRule(e,r){if(!e||"string"!=typeof e)throw new Error("Rule key must be a non-empty string");if(!r||!Array.isArray(r.conditions))throw new Error("Conditional rule must have a conditions array");if(0===r.conditions.length)throw new Error("Conditions array cannot be empty");let t=!1;for(const e of r.conditions)if("default"in e){if(t)throw new Error("Only one default condition is allowed");if(t=!0,!Array.isArray(e.default)||0===e.default.length)throw new Error("Default condition must have an array of values")}else{if(!("if"in e)||!("then"in e))throw new Error('Each condition must have either "if/then" or "default"');if("function"!=typeof e.if)throw new Error('Condition "if" must be a function');if(!Array.isArray(e.then)||0===e.then.length)throw new Error('Condition "then" must be an array of values')}this.rules.set(e,{conditions:r.conditions.map(e=>Object.assign({},e))})}generateValue(e,r,t){const i=this.rules.get(e);if(!i)return null;for(const e of i.conditions){if("default"in e&&e.default)return t.randomChoice(e.default);if(e.if&&e.if(r))return t.randomChoice(e.then)}throw new Error("No matching condition found and no default provided")}}r.ConditionalRuleManager=a;class s extends i.BaseRuleManager{addRule(e,r,t={cycle:!0}){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!Array.isArray(r)||0===r.length)throw new Error("Values must be a non-empty array");this.rules.set(e,{values:[...r],index:0,cycle:t.cycle})}generateValue(e,r,t){const i=this.rules.get(e);if(!i)return null;if(i.index>=i.values.length){if(!i.cycle)return i.values[i.values.length-1];i.index=0}const a=i.values[i.index];return i.index++,a}resetRule(e){const r=this.rules.get(e);return!!r&&(r.index=0,!0)}}r.SequentialRuleManager=s;class n extends i.BaseRuleManager{addRule(e,r){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if("number"!=typeof r.min||"number"!=typeof r.max)throw new Error("Min and max must be numbers");if(r.min>=r.max)throw new Error("Min must be less than max");if(void 0!==r.step&&("number"!=typeof r.step||r.step<=0))throw new Error("Step must be a positive number");if(!["integer","float"].includes(r.type))throw new Error('Type must be "integer" or "float"');this.rules.set(e,{min:r.min,max:r.max,step:r.step,type:r.type})}generateValue(e,r,t){const i=this.rules.get(e);if(!i)return null;const{min:a,max:s,step:n,type:l}=i;if(void 0!==n){const e=Math.floor((s-a)/n),r=a+t.randomInt(0,e+1)*n;return"integer"===l?Math.floor(r).toString():r.toString()}{const e=a+t.random()*(s-a);return"integer"===l?Math.floor(e).toString():e.toString()}}}r.RangeRuleManager=n;class l extends i.BaseRuleManager{addRule(e,r){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!r.template||"string"!=typeof r.template)throw new Error("Template must be a non-empty string");if(!r.variables||"object"!=typeof r.variables)throw new Error("Variables must be an object");const t=this.findVariables(r.template);for(const e of t){if(!(e in r.variables))throw new Error(`Template variable '${e}' not found in variables object`);if(!Array.isArray(r.variables[e])||0===r.variables[e].length)throw new Error(`Variable '${e}' must be an array`)}this.rules.set(e,{template:r.template,variables:Object.assign({},r.variables)})}generateValue(e,r,t){const i=this.rules.get(e);if(!i)return null;let a=i.template;const s=this.findVariables(a);for(const e of s){const r=i.variables[e];if(r&&r.length>0){const i=t.randomChoice(r);a=a.replace(new RegExp(`%${e}%`,"g"),i)}}return a}findVariables(e){const r=/%([^%]+)%/g,t=new Set;let i;for(;null!==(i=r.exec(e));)t.add(i[1]);return Array.from(t)}}r.TemplateRuleManager=l},"./src/rules/BaseRuleManager.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.WeightedRuleManager=r.FunctionRuleManager=r.StaticRuleManager=r.BaseRuleManager=void 0;class t{constructor(){this.rules=new Map}removeRule(e){return this.rules.delete(e)}hasRule(e){return this.rules.has(e)}getRule(e){return this.rules.get(e)}clear(){this.rules.clear()}getKeys(){return Array.from(this.rules.keys())}size(){return this.rules.size}getRuleData(e){return this.rules.get(e)}}r.BaseRuleManager=t,r.StaticRuleManager=class extends t{addRule(e,r){if(!e||"string"!=typeof e)throw new Error("Rule key must be a non-empty string");if(!Array.isArray(r))throw new Error("Rule values must be an array");this.rules.set(e,[...r])}addRules(e){for(const[r,t]of Object.entries(e))this.addRule(r,t)}generateValue(e,r,t){const i=this.rules.get(e);return i?0===i.length?"":t.randomChoice(i):null}getGrammar(){const e={};for(const[r,t]of this.rules.entries())e[r]=[...t];return e}},r.FunctionRuleManager=class extends t{addRule(e,r){if(!e||"string"!=typeof e)throw new Error("Rule key must be a non-empty string");if("function"!=typeof r)throw new Error("Rule function must be a function");this.rules.set(e,r)}generateValue(e,r,t){const i=this.rules.get(e);if(!i)return null;try{const r=i();if(!Array.isArray(r))throw new Error(`Function rule '${e}' must return an array`);return 0===r.length?null:t.randomChoice(r)}catch(r){throw new Error(`Error executing function rule '${e}': ${r.message}`)}}},r.WeightedRuleManager=class extends t{addRule(e,r,t){if(!e||"string"!=typeof e)throw new Error("Rule key must be a non-empty string");if(!Array.isArray(r))throw new Error("Rule values must be an array");if(!Array.isArray(t))throw new Error("Rule weights must be an array");if(r.length!==t.length)throw new Error("Values and weights arrays must have the same length");if(0===r.length)throw new Error("Values array cannot be empty");for(const e of t)if("number"!=typeof e||e<0)throw new Error("All weights must be non-negative numbers");const i=t.reduce((e,r)=>e+r,0);if(Math.abs(i-1)>1e-4)throw new Error(`Weights must sum to 1.0, got ${i}`);const a=[];let s=0;for(const e of t)s+=e,a.push(s);this.rules.set(e,{values:[...r],weights:[...t],cumulativeWeights:a})}generateValue(e,r,t){const i=this.rules.get(e);return i?t.weightedChoice(i.values,i.cumulativeWeights):null}}},"./src/rules/RuleManager.ts":(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.RuleManager=void 0;const i=t("./src/rules/BaseRuleManager.ts"),a=t("./src/rules/AdvancedRuleManagers.ts");r.RuleManager=class{constructor(){this.staticRules=new i.StaticRuleManager,this.functionRules=new i.FunctionRuleManager,this.weightedRules=new i.WeightedRuleManager,this.conditionalRules=new a.ConditionalRuleManager,this.sequentialRules=new a.SequentialRuleManager,this.rangeRules=new a.RangeRuleManager,this.templateRules=new a.TemplateRuleManager,this.ruleManagers=[{name:"function",manager:this.functionRules},{name:"conditional",manager:this.conditionalRules},{name:"sequential",manager:this.sequentialRules},{name:"range",manager:this.rangeRules},{name:"template",manager:this.templateRules},{name:"weighted",manager:this.weightedRules},{name:"static",manager:this.staticRules}]}addRule(e,r){this.staticRules.addRule(e,r)}addRules(e){this.staticRules.addRules(e)}addFunctionRule(e,r){this.functionRules.addRule(e,r)}addWeightedRule(e,r,t){this.weightedRules.addRule(e,r,t)}addConditionalRule(e,r){this.conditionalRules.addRule(e,r)}addSequentialRule(e,r,t){this.sequentialRules.addRule(e,r,t)}addRangeRule(e,r){this.rangeRules.addRule(e,r)}addTemplateRule(e,r){this.templateRules.addRule(e,r)}hasRule(e){return this.ruleManagers.some(({manager:r})=>r.hasRule(e))}removeRule(e){let r=!1;for(const{manager:t}of this.ruleManagers)t.removeRule(e)&&(r=!0);return r}generateValue(e,r,t){for(const{manager:i}of this.ruleManagers)if(i.hasRule(e))return i.generateValue(e,r,t);return null}getRuleType(e){for(const{name:r,manager:t}of this.ruleManagers)if(t.hasRule(e))return r;return null}clear(){for(const{manager:e}of this.ruleManagers)e.clear()}clearStaticRules(){this.staticRules.clear()}clearFunctionRules(){this.functionRules.clear()}clearWeightedRules(){this.weightedRules.clear()}clearConditionalRules(){this.conditionalRules.clear()}clearSequentialRules(){this.sequentialRules.clear()}clearRangeRules(){this.rangeRules.clear()}clearTemplateRules(){this.templateRules.clear()}getStats(){return{static:this.staticRules.size(),function:this.functionRules.size(),weighted:this.weightedRules.size(),conditional:this.conditionalRules.size(),sequential:this.sequentialRules.size(),range:this.rangeRules.size(),template:this.templateRules.size(),total:this.ruleManagers.reduce((e,{manager:r})=>e+r.size(),0)}}getAllKeys(){const e=new Set;for(const{manager:r}of this.ruleManagers)for(const t of r.getKeys())e.add(t);return Array.from(e)}resetSequentialRule(e){return this.sequentialRules.resetRule(e)}getGrammar(){return this.staticRules.getGrammar()}getWeightedRuleData(e){return this.weightedRules.getRuleData(e)}getConditionalRuleData(e){return this.conditionalRules.getRuleData(e)}getSequentialRuleData(e){return this.sequentialRules.getRuleData(e)}getRangeRuleData(e){return this.rangeRules.getRuleData(e)}getTemplateRuleData(e){return this.templateRules.getRuleData(e)}hasFunctionRule(e){return this.functionRules.hasRule(e)}hasWeightedRule(e){return this.weightedRules.hasRule(e)}hasConditionalRule(e){return this.conditionalRules.hasRule(e)}hasSequentialRule(e){return this.sequentialRules.hasRule(e)}hasRangeRule(e){return this.rangeRules.hasRule(e)}hasTemplateRule(e){return this.templateRules.hasRule(e)}removeFunctionRule(e){return this.functionRules.removeRule(e)}removeWeightedRule(e){return this.weightedRules.removeRule(e)}removeConditionalRule(e){return this.conditionalRules.removeRule(e)}removeSequentialRule(e){return this.sequentialRules.removeRule(e)}removeRangeRule(e){return this.rangeRules.removeRule(e)}removeTemplateRule(e){return this.templateRules.removeRule(e)}}},"./src/types.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0})},"./src/utils/SeededRandom.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.SeededRandom=void 0,r.SeededRandom=class{constructor(){this.seed=null,this.currentSeed=0}setSeed(e){if(!Number.isInteger(e))throw new Error("Seed must be an integer");this.seed=Math.abs(e)>>>0,this.currentSeed=this.seed}clearSeed(){this.seed=null,this.currentSeed=0}getSeed(){return this.seed}random(){return null===this.seed?Math.random():(this.currentSeed=1664525*this.currentSeed+1013904223>>>0,this.currentSeed/4294967296)}randomInt(e,r){return Math.floor(this.random()*(r-e))+e}randomChoice(e){if(0===e.length)throw new Error("Cannot choose from empty array");return e[this.randomInt(0,e.length)]}weightedChoice(e,r){if(e.length!==r.length)throw new Error("Values and weights arrays must have same length");if(0===e.length)throw new Error("Cannot choose from empty arrays");const t=this.random();for(let i=0;i<r.length;i++)if(t<=r[i])return e[i];return e[e.length-1]}}},"./src/validation/GrammarValidator.ts":(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.GrammarValidator=void 0,r.GrammarValidator=class{constructor(e,r){this.ruleManager=e,this.variableExpander=r}validate(){const e=[],r=[],t=[],i=[],a=[],s=this.ruleManager.getAllKeys(),n=new Set;for(const r of s){this.isRuleEmpty(r)&&t.push(r);const i=this.findRuleReferences(r);for(const r of i)n.add(r),this.ruleManager.hasRule(r)||e.includes(r)||e.push(r)}for(const e of s)n.has(e)||this.isRootRule(e)||i.push(e);const l=this.variableExpander.findCircularReferences();return r.push(...l),t.length>0&&a.push(`Found ${t.length} empty rules that may cause issues`),i.length>5&&a.push(`Found ${i.length} unreachable rules - consider cleanup`),s.length>100&&a.push(`Large grammar with ${s.length} rules - consider organizing into groups`),{isValid:0===e.length&&0===r.length&&0===t.length,missingRules:e,circularReferences:r,emptyRules:t,unreachableRules:i,warnings:a}}isRuleEmpty(e){switch(this.ruleManager.getRuleType(e)){case"static":{const r=this.ruleManager.getGrammar()[e];return!r||0===r.length||r.every(e=>!e||""===e.trim())}case"function":case"weighted":case"conditional":case"sequential":case"template":case"range":return!1;default:return!0}}findRuleReferences(e){const r=[];switch(this.ruleManager.getRuleType(e)){case"static":{const t=this.ruleManager.getGrammar()[e];if(t)for(const e of t){const t=this.variableExpander.findVariables(e);r.push(...t.filter(e=>!e.startsWith("@")))}break}}return Array.from(new Set(r))}isRootRule(e){return[/^(main|start|root|entry|begin)$/i,/^(sentence|story|text|output)$/i,/^(template|pattern|format)$/i].some(r=>r.test(e))}validateText(e){return this.variableExpander.findMissingVariables(e)}isValid(){return this.validate().isValid}getValidationSummary(){const e=this.validate(),r=[];if(e.isValid?r.push("✅ Grammar validation passed"):r.push("❌ Grammar validation failed"),e.missingRules.length>0&&r.push(`Missing rules: ${e.missingRules.join(", ")}`),e.circularReferences.length>0&&r.push(`Circular references: ${e.circularReferences.join(", ")}`),e.emptyRules.length>0&&r.push(`Empty rules: ${e.emptyRules.join(", ")}`),e.unreachableRules.length>0&&r.push(`Unreachable rules: ${e.unreachableRules.slice(0,5).join(", ")}${e.unreachableRules.length>5?"...":""}`),e.warnings.length>0){r.push("Warnings:");for(const t of e.warnings)r.push(`  - ${t}`)}return r.join("\n")}}}},r={};return function t(i){var a=r[i];if(void 0!==a)return a.exports;var s=r[i]={exports:{}};return e[i].call(s.exports,s,s.exports,t),s.exports}("./src/index.ts")})());
//# sourceMappingURL=story-grammar.bundle.js.map