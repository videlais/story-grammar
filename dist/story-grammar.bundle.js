/*! For license information please see story-grammar.bundle.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.StoryGrammar=t():e.StoryGrammar=t()}(this,()=>(()=>{"use strict";var e={"./src/EnglishModifiers.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BasicEnglishModifiers=t.AllEnglishModifiers=t.PunctuationCleanupModifier=t.EnglishVerbAgreementModifier=t.EnglishPossessiveModifier=t.EnglishCapitalizationModifier=t.EnglishOrdinalModifier=t.EnglishPluralizationModifier=t.EnglishArticleModifier=void 0,t.EnglishArticleModifier={name:"englishArticles",condition:e=>/\ba\s+[aeiouAEIOU]/.test(e),transform:e=>e.replace(/\ba(\s+)([aeiouAEIOU][a-z]*)/gi,"an$1$2"),priority:10},t.EnglishPluralizationModifier={name:"englishPluralization",condition:e=>/\b(many|several|multiple|some|few|all|both|various|numerous|[2-9]\d*|\d*[02-9])\s+[a-zA-Z]+/i.test(e)||/\b(two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\s+[a-zA-Z]+/i.test(e)||/\b(zero|no)\s+[a-zA-Z]+/i.test(e),transform:e=>e.replace(/\b(many|several|multiple|some|few|all|both|various|numerous|zero|no|[2-9]\d*|\d*[02-9]|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\s+([a-zA-Z]+)\b/gi,(e,t,i)=>{const r=function(e){const t=e.toLowerCase(),i={addendum:"addenda",aircraft:"aircraft",alumna:"alumnae",alumnus:"alumni",analysis:"analyses",antenna:"antennae",antithesis:"antitheses",apex:"apices",appendix:"appendices",axis:"axes",bacillus:"bacilli",bacterium:"bacteria",basis:"bases",beau:"beaux",bison:"bison",bureau:"bureaux",cactus:"cacti",château:"châteaux",child:"children",codex:"codices",concerto:"concerti",corpus:"corpora",crisis:"crises",criterion:"criteria",curriculum:"curricula",datum:"data",deer:"deer",diagnosis:"diagnoses",die:"dice",dwarf:"dwarves",ellipsis:"ellipses",erratum:"errata",fez:"fezzes",fish:"fish",focus:"foci",foot:"feet",formula:"formulae",fungus:"fungi",genus:"genera",goose:"geese",graffito:"graffiti",grouse:"grouse",half:"halves",hoof:"hooves",hypothesis:"hypotheses",index:"indices",larva:"larvae",libretto:"libretti",loaf:"loaves",locus:"loci",louse:"lice",man:"men",matrix:"matrices",medium:"media",memorandum:"memoranda",minutia:"minutiae",moose:"moose",mouse:"mice",nebula:"nebulae",nucleus:"nuclei",oasis:"oases",offspring:"offspring",opus:"opera",ovum:"ova",ox:"oxen",parenthesis:"parentheses",person:"people",phenomenon:"phenomena",phylum:"phyla",quiz:"quizzes",radius:"radii",referendum:"referenda",salmon:"salmon",scarf:"scarves",self:"selves",series:"series",sheep:"sheep",shrimp:"shrimp",species:"species",stimulus:"stimuli",stratum:"strata",swine:"swine",syllabus:"syllabi",symposium:"symposia",synopsis:"synopses",tableau:"tableaux",thesis:"theses",thief:"thieves",tooth:"teeth",trout:"trout",tuna:"tuna",vertebra:"vertebrae",vertex:"vertices",vita:"vitae",vortex:"vortices",wharf:"wharves",wife:"wives",wolf:"wolves",woman:"women"};return i[t]?(s=i[t],(r=e)===r.toUpperCase()?s.toUpperCase():r[0]===r[0].toUpperCase()?s.charAt(0).toUpperCase()+s.slice(1):s):/[sxz]$/.test(t)||/[sc]h$/.test(t)?e+"es":/[bcdfghjklmnpqrstvwxz]y$/i.test(t)?e.slice(0,-1)+"ies":/[aeiou]y$/i.test(t)?e+"s":/fe?$/i.test(t)?["belief","chief","cliff","proof","roof","safe","chef","handkerchief"].includes(t)?e+"s":e.replace(/fe?$/i,"ves"):/[bcdfghjklmnpqrstvwxz]o$/i.test(t)?["photo","piano","halo","disco","studio","radio","video","auto","memo","pro","casino","patio","portfolio","logo","commando","solo","soprano","alto","kimono"].includes(t)?e+"s":e+"es":(/[aeiou]o$/i.test(t),e+"s");var r,s}(i);return`${t} ${r}`}),priority:9},t.EnglishOrdinalModifier={name:"englishOrdinals",condition:e=>/\b\d+\b/.test(e),transform:e=>e.replace(/\b(\d+)\b/g,(e,t)=>{const i=parseInt(t,10),r=i%100;if(11===r||12===r||13===r)return t+"th";switch(i%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd";default:return t+"th"}}),priority:8},t.EnglishCapitalizationModifier={name:"englishCapitalization",condition:e=>/[.!?]\s+[a-z]/.test(e),transform:e=>e.replace(/([.!?]\s+)([a-z])/g,(e,t,i)=>t+i.toUpperCase()),priority:7},t.EnglishPossessiveModifier={name:"englishPossessives",condition:e=>/\b\w+\s+possessive\b/i.test(e)||/\b\w+'s?\s+\w/.test(e),transform:e=>(e=e.replace(/\b(\w+)\s+possessive\b/gi,(e,t)=>t.endsWith("s")?t+"'":t+"'s")).replace(/(\w+)'s's/g,"$1's"),priority:6},t.EnglishVerbAgreementModifier={name:"englishVerbAgreement",condition:e=>/\b(he|she|it)\s+are\b/i.test(e)||/\b(they|many|several|few|all|both)\s+is\b/i.test(e)||/\b(he|she|it)\s+have\b/i.test(e)||/\b(they|many|several|few|all|both)\s+has\b/i.test(e),transform:e=>(e=(e=(e=e.replace(/\b(he|she|it)\s+are\b/gi,"$1 is")).replace(/\b(they|many|several|few|all|both)\s+is\b/gi,"$1 are")).replace(/\b(he|she|it)\s+have\b/gi,"$1 has")).replace(/\b(they|many|several|few|all|both)\s+has\b/gi,"$1 have"),priority:5},t.PunctuationCleanupModifier={name:"punctuationCleanup",condition:e=>/\s{2,}/.test(e)||/\s[.!?,:;]/.test(e)||/[.!?,:;]\S/.test(e),transform:e=>(e=(e=(e=e.replace(/\s{2,}/g," ")).replace(/\s([.!?,:;])/g,"$1")).replace(/([.!?,:;])([A-Za-z])/g,"$1 $2")).trim(),priority:1},t.AllEnglishModifiers=[t.EnglishArticleModifier,t.EnglishPluralizationModifier,t.EnglishOrdinalModifier,t.EnglishCapitalizationModifier,t.EnglishPossessiveModifier,t.EnglishVerbAgreementModifier,t.PunctuationCleanupModifier],t.BasicEnglishModifiers=[t.EnglishArticleModifier,t.EnglishPluralizationModifier,t.EnglishOrdinalModifier]},"./src/Parser.ts":function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__exportStar||function(e,t){for(var i in e)"default"===i||Object.prototype.hasOwnProperty.call(t,i)||r(t,e,i)};Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=void 0,s(i("./src/types.ts"),t);var n=i("./src/ParserCore.ts");Object.defineProperty(t,"Parser",{enumerable:!0,get:function(){return n.Parser}})},"./src/ParserCore.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=void 0;class i{constructor(){this.grammar={},this.functionRules=new Map,this.weightedRules=new Map,this.conditionalRules=new Map,this.sequentialRules=new Map,this.rangeRules=new Map,this.templateRules=new Map,this.referenceValues=new Map,this.modifiers=new Map,this.variablePattern=/%([^%]+)%/g,this.maxDepth=100,this.randomSeed=null,this.currentSeed=0,this.currentContext={}}addRule(e,t){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!Array.isArray(t))throw new Error("Values must be an array");this.grammar[e]=[...t]}addRules(e){for(const[t,i]of Object.entries(e))this.addRule(t,i)}addFunctionRule(e,t){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if("function"!=typeof t)throw new Error("Value must be a function");this.functionRules.set(e,t)}removeFunctionRule(e){return this.functionRules.delete(e)}hasFunctionRule(e){return this.functionRules.has(e)}clearFunctionRules(){this.functionRules.clear()}addWeightedRule(e,t,i){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!Array.isArray(t))throw new Error("Values must be an array");if(!Array.isArray(i))throw new Error("Weights must be an array");if(t.length!==i.length)throw new Error("Values and weights arrays must have the same length");if(0===t.length)throw new Error("Values array cannot be empty");for(const e of i)if("number"!=typeof e||e<0)throw new Error("All weights must be non-negative numbers");const r=i.reduce((e,t)=>e+t,0);if(Math.abs(r-1)>1e-4)throw new Error(`Weights must sum to 1.0, but sum to ${r}`);const s=[];let n=0;for(const e of i)n+=e,s.push(n);this.weightedRules.set(e,{values:[...t],weights:[...i],cumulativeWeights:s})}removeWeightedRule(e){return this.weightedRules.delete(e)}hasWeightedRule(e){return this.weightedRules.has(e)}clearWeightedRules(){this.weightedRules.clear()}addConditionalRule(e,t){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!t||!Array.isArray(t.conditions))throw new Error("Rule must have a conditions array");if(0===t.conditions.length)throw new Error("Conditions array cannot be empty");let i=!1;for(const e of t.conditions)if("default"in e){if(i)throw new Error("Only one default condition is allowed");if(i=!0,!Array.isArray(e.default))throw new Error("Default condition must have an array of values")}else{if(!("if"in e)||!("then"in e))throw new Error('Each condition must have either "if/then" or "default"');if("function"!=typeof e.if)throw new Error('Condition "if" must be a function');if(!Array.isArray(e.then))throw new Error('Condition "then" must be an array of values')}this.conditionalRules.set(e,{conditions:t.conditions.map(e=>Object.assign({},e))})}addSequentialRule(e,t,i={cycle:!0}){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!Array.isArray(t)||0===t.length)throw new Error("Values must be a non-empty array");this.sequentialRules.set(e,{values:[...t],index:0,cycle:i.cycle})}addRangeRule(e,t){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if("number"!=typeof t.min||"number"!=typeof t.max)throw new Error("Min and max must be numbers");if(t.min>=t.max)throw new Error("Min must be less than max");if(void 0!==t.step&&("number"!=typeof t.step||t.step<=0))throw new Error("Step must be a positive number");if(!["integer","float"].includes(t.type))throw new Error('Type must be "integer" or "float"');this.rangeRules.set(e,{min:t.min,max:t.max,step:t.step,type:t.type})}addTemplateRule(e,t){if(!e||"string"!=typeof e)throw new Error("Key must be a non-empty string");if(!t.template||"string"!=typeof t.template)throw new Error("Template must be a non-empty string");if(!t.variables||"object"!=typeof t.variables)throw new Error("Variables must be an object");const i=this.findVariables(t.template);for(const e of i){if(!(e in t.variables))throw new Error(`Template variable '${e}' not found in variables object`);if(!Array.isArray(t.variables[e]))throw new Error(`Variable '${e}' must be an array`)}this.templateRules.set(e,{template:t.template,variables:Object.assign({},t.variables)})}removeConditionalRule(e){return this.conditionalRules.delete(e)}removeSequentialRule(e){return this.sequentialRules.delete(e)}removeRangeRule(e){return this.rangeRules.delete(e)}removeTemplateRule(e){return this.templateRules.delete(e)}hasConditionalRule(e){return this.conditionalRules.has(e)}hasSequentialRule(e){return this.sequentialRules.has(e)}hasRangeRule(e){return this.rangeRules.has(e)}hasTemplateRule(e){return this.templateRules.has(e)}clearConditionalRules(){this.conditionalRules.clear()}clearSequentialRules(){this.sequentialRules.clear()}clearRangeRules(){this.rangeRules.clear()}clearTemplateRules(){this.templateRules.clear()}resetSequentialRule(e){const t=this.sequentialRules.get(e);return!!t&&(t.index=0,!0)}addModifier(e){var t;if(!e||"object"!=typeof e)throw new Error("Modifier must be an object");if(!e.name||"string"!=typeof e.name)throw new Error("Modifier must have a name");if("function"!=typeof e.condition)throw new Error("Modifier must have a condition function");if("function"!=typeof e.transform)throw new Error("Modifier must have a transform function");this.modifiers.set(e.name,Object.assign(Object.assign({},e),{priority:null!==(t=e.priority)&&void 0!==t?t:0}))}removeModifier(e){return this.modifiers.delete(e)}hasModifier(e){return this.modifiers.has(e)}getModifiers(){return Array.from(this.modifiers.values()).sort((e,t)=>{var i,r;return(null!==(i=t.priority)&&void 0!==i?i:0)-(null!==(r=e.priority)&&void 0!==r?r:0)})}loadModifier(e){this.addModifier(e)}loadModifiers(e){for(const t of e)this.addModifier(t)}getGrammar(){const e={};for(const[t,i]of Object.entries(this.grammar))e[t]=[...i];return e}parse(e,t=!1){if("string"!=typeof e)throw new Error("Text must be a string");t||(this.currentContext={},this.referenceValues.clear());const i=this.expandVariables(e,0);return this.applyModifiers(i,{originalText:e})}parseWithTiming(e,t=!1){const i=Date.now();if("string"!=typeof e)throw new Error("Text must be a string");t||(this.currentContext={},this.referenceValues.clear());const r=Date.now(),s=this.expandVariables(e,0),n=Date.now(),a=Date.now(),o=this.applyModifiers(s,{originalText:e}),l=Date.now();return{result:o,timing:{totalMs:Date.now()-i,expansionMs:n-r,modifierMs:l-a}}}expandVariables(e,t){if(t>=this.maxDepth)throw new Error("Maximum recursion depth exceeded. Check for circular references in grammar.");return this.variablePattern.lastIndex=0,e.replace(this.variablePattern,(e,i)=>{let r;if(i.startsWith("@")){const t=i.substring(1),r=this.referenceValues.get(t);return void 0!==r?r:e}const s=this.functionRules.get(i);if(s)try{const t=s();if(!Array.isArray(t))throw new Error(`Function rule '${i}' must return an array`);if(0===t.length)return e;r=this.getRandomValue(t)}catch(e){throw new Error(`Error executing function rule '${i}': ${e instanceof Error?e.message:String(e)}`)}else{const t=this.conditionalRules.get(i);if(t)r=this.getConditionalValue(t);else{const t=this.sequentialRules.get(i);if(t)r=this.getSequentialValue(t);else{const t=this.rangeRules.get(i);if(t)r=this.getRangeValue(t);else{const t=this.templateRules.get(i);if(t)r=this.getTemplateValue(t);else{const t=this.weightedRules.get(i);if(t)r=this.getWeightedRandomValue(t);else{const t=this.grammar[i];if(!t||0===t.length)return e;r=this.getRandomValue(t)}}}}}}return this.referenceValues.set(i,r),this.currentContext[i]=r,this.expandVariables(r,t+1)})}applyModifiers(e,t){let i=e;const r=this.getModifiers();for(const e of r)e.condition(i,t)&&(i=e.transform(i,t));return i}getConditionalValue(e){for(const t of e.conditions)if("if"in t&&t.if&&t.then){if(t.if(this.currentContext))return this.getRandomValue(t.then)}else if("default"in t&&t.default)return this.getRandomValue(t.default);throw new Error("No matching condition found and no default provided")}getSequentialValue(e){if(e.index>=e.values.length){if(!e.cycle)return e.values[e.values.length-1];e.index=0}const t=e.values[e.index];return e.index++,t}getRangeValue(e){const{min:t,max:i,step:r,type:s}=e;if(void 0!==r){const e=Math.floor((i-t)/r),n=t+Math.floor(this.getSeededRandom()*(e+1))*r;return"integer"===s?Math.round(n).toString():n.toString()}{const e=t+this.getSeededRandom()*(i-t);return"integer"===s?Math.floor(e).toString():e.toString()}}getTemplateValue(e){const t=Object.assign({},this.currentContext);let i=e.template;const r=this.findVariables(i);for(const s of r)if(s in e.variables){const r=this.getRandomValue(e.variables[s]);i=i.replace(new RegExp(`%${s}%`,"g"),r),t[s]=r}return i}getSeededRandom(){return null===this.randomSeed?Math.random():(this.currentSeed=1664525*this.currentSeed+1013904223>>>0,this.currentSeed/4294967296)}getRandomValue(e){return e[Math.floor(this.getSeededRandom()*e.length)]}getWeightedRandomValue(e){const t=this.getSeededRandom();for(let i=0;i<e.cumulativeWeights.length;i++)if(t<=e.cumulativeWeights[i])return e.values[i];return e.values[e.values.length-1]}hasRule(e){return this.functionRules.has(e)||this.conditionalRules.has(e)||this.sequentialRules.has(e)||this.rangeRules.has(e)||this.templateRules.has(e)||this.weightedRules.has(e)||e in this.grammar}removeRule(e){const t=this.functionRules.delete(e),i=this.conditionalRules.delete(e),r=this.sequentialRules.delete(e),s=this.rangeRules.delete(e),n=this.templateRules.delete(e),a=this.weightedRules.delete(e),o=e in this.grammar&&(delete this.grammar[e],!0);return t||i||r||s||n||a||o}clear(){this.grammar={},this.functionRules.clear(),this.conditionalRules.clear(),this.sequentialRules.clear(),this.rangeRules.clear(),this.templateRules.clear(),this.weightedRules.clear(),this.referenceValues.clear(),this.currentContext={}}clearModifiers(){this.modifiers.clear()}clearAll(){this.clear(),this.clearModifiers()}findVariables(e){const t=new Set;let i;for(this.variablePattern.lastIndex=0;null!==(i=this.variablePattern.exec(e));)t.add(i[1]);return Array.from(t)}validate(){const e=new Set,t=new Set,i=[],r=new Set,s=[];for(const[n,a]of Object.entries(this.grammar))if(a&&0!==a.length)for(const i of a){if(!i||"string"!=typeof i){s.push(`Rule '${n}' contains non-string value`);continue}const a=this.findVariables(i);for(const i of a)i.startsWith("@")||(r.add(i),this.hasRule(i)||e.add(i),i===n&&t.add(n))}else i.push(n);const n=new Set([...Object.keys(this.grammar),...Array.from(this.functionRules.keys()),...Array.from(this.weightedRules.keys()),...Array.from(this.conditionalRules.keys()),...Array.from(this.sequentialRules.keys()),...Array.from(this.rangeRules.keys()),...Array.from(this.templateRules.keys())]),a=Array.from(n).filter(e=>!r.has(e));return 0===this.modifiers.size&&s.push("No modifiers configured - consider adding English modifiers for better text quality"),0===Object.keys(this.grammar).length&&0===n.size&&s.push("No rules defined"),{isValid:0===e.size&&0===t.size&&0===i.length,missingRules:Array.from(e),circularReferences:Array.from(t),emptyRules:i,unreachableRules:a,warnings:s}}safeParse(e,t={}){const{preserveContext:i=!1,validateFirst:r=!0,maxAttempts:s=3}=t;try{if(r){const e=this.validate();if(!e.isValid)return{success:!1,error:`Validation failed: ${e.missingRules.length} missing rules, ${e.circularReferences.length} circular references`,validation:e}}let t=null;for(let r=1;r<=s;r++)try{return{success:!0,result:this.parse(e,i),attempts:r}}catch(n){if(t=n instanceof Error?n:new Error(String(n)),t.message.includes("recursion")&&r<s){const t=this.maxDepth;this.setMaxDepth(Math.max(10,Math.floor(t/2)));try{const s=this.parse(e,i);return this.setMaxDepth(t),{success:!0,result:s,attempts:r}}catch(e){this.setMaxDepth(t)}}}return{success:!1,error:(null==t?void 0:t.message)||"Unknown parsing error",attempts:s}}catch(e){return{success:!1,error:e instanceof Error?e.message:String(e)}}}setMaxDepth(e){if(e<1)throw new Error("Max depth must be at least 1");this.maxDepth=e}getMaxDepth(){return this.maxDepth}setRandomSeed(e){if("number"!=typeof e||!Number.isInteger(e))throw new Error("Seed must be an integer");this.randomSeed=Math.abs(e)>>>0,this.currentSeed=this.randomSeed}clearRandomSeed(){this.randomSeed=null,this.currentSeed=0}getRandomSeed(){return this.randomSeed}clearReferences(){this.referenceValues.clear(),this.currentContext={}}getContext(){return Object.assign({},this.currentContext)}parseBatch(e,t=!0){if(!Array.isArray(e))throw new Error("Texts must be an array");const i=[];for(let r=0;r<e.length;r++){const s=t&&r>0;i.push(this.parse(e[r],s))}return i}generateVariations(e,t,i){if("string"!=typeof e)throw new Error("Text must be a string");if(!Number.isInteger(t)||t<1)throw new Error("Count must be a positive integer");const r=this.getRandomSeed(),s=[];try{for(let r=0;r<t;r++)void 0!==i&&this.setRandomSeed(i+r),s.push(this.parse(e,!1))}finally{null!==r?this.setRandomSeed(r):this.clearRandomSeed()}return s}getStats(){return{totalRules:Object.keys(this.grammar).length+this.functionRules.size+this.weightedRules.size+this.conditionalRules.size+this.sequentialRules.size+this.rangeRules.size+this.templateRules.size,rulesByType:{static:Object.keys(this.grammar).length,function:this.functionRules.size,weighted:this.weightedRules.size,conditional:this.conditionalRules.size,sequential:this.sequentialRules.size,range:this.rangeRules.size,template:this.templateRules.size},totalModifiers:this.modifiers.size,maxDepth:this.maxDepth,hasRandomSeed:null!==this.randomSeed}}exportConfig(){return{grammar:this.getGrammar(),modifiers:Array.from(this.modifiers.keys()),settings:{maxDepth:this.maxDepth,randomSeed:this.randomSeed}}}clone(){const e=new i;return e.addRules(this.getGrammar()),e.setMaxDepth(this.maxDepth),null!==this.randomSeed&&e.setRandomSeed(this.randomSeed),e}optimize(){const e=[],t=[],i=this.getStats();i.totalRules>1e3&&e.push(`Large number of rules (${i.totalRules}). Consider grouping related rules.`),i.totalModifiers>10&&e.push(`Many modifiers (${i.totalModifiers}). High-priority modifiers run first.`),i.maxDepth>20&&t.push("Consider reducing max depth for better performance.");const r=new Set;for(const e of Object.values(this.grammar))for(const t of e)this.findVariables(t).forEach(e=>r.add(e));const s=Object.keys(this.grammar).filter(e=>!r.has(e));return s.length>0&&t.push(`Consider removing unused rules: ${s.slice(0,5).join(", ")}${s.length>5?"...":""}`),{warnings:e,suggestions:t,optimized:0===e.length&&0===t.length}}analyzeRules(e){const t=[],i=[];for(const[t,r]of Object.entries(this.grammar)){if(e&&t!==e)continue;let s=0;const n=new Set;for(const e of r){const t=this.findVariables(e);t.forEach(e=>n.add(e)),s+=t.length+(e.length>50?2:0)}if(i.push({name:t,complexity:s,type:"static"}),e===t)return{totalComplexity:s,averageDepth:this.calculateRuleDepth(t),mostComplex:[t],suggestions:s>10?["Consider splitting complex rule into smaller rules"]:[],ruleDetails:{name:t,type:"static",complexity:s,variables:Array.from(n),depth:this.calculateRuleDepth(t)}}}this.functionRules.forEach((t,r)=>{e&&r!==e||i.push({name:r,complexity:5,type:"function"})}),this.weightedRules.forEach((t,r)=>{if(!e||r===e){const e=2*t.values.length;i.push({name:r,complexity:e,type:"weighted"})}}),this.conditionalRules.forEach((t,r)=>{if(!e||r===e){const e=3*t.conditions.length;i.push({name:r,complexity:e,type:"conditional"})}}),this.templateRules.forEach((t,r)=>{if(!e||r===e){const e=2*this.findVariables(t.template).length+Object.keys(t.variables).length;i.push({name:r,complexity:e,type:"template"})}});const r=i.reduce((e,t)=>e+t.complexity,0),s=i.length>0?i.reduce((e,t)=>e+this.calculateRuleDepth(t.name),0)/i.length:0;i.sort((e,t)=>t.complexity-e.complexity);const n=i.slice(0,5).map(e=>`${e.name} (${e.type}: ${e.complexity})`);return r>100&&t.push("High total complexity - consider simplifying rules"),s>5&&t.push("Deep rule nesting detected - may impact performance"),i.length>50&&t.push("Large number of rules - consider organizing into groups"),{totalComplexity:r,averageDepth:s,mostComplex:n,suggestions:t}}calculateRuleDepth(e,t=new Set){if(t.has(e))return 0;t.add(e);let i=0;const r=this.grammar[e];if(r)for(const e of r){const r=this.findVariables(e);for(const e of r)if(this.hasRule(e)){const r=1+this.calculateRuleDepth(e,new Set(t));i=Math.max(i,r)}}return t.delete(e),i}getHelpfulError(e,t){const i=e.message;let r=i;const s=[];if(i.includes("Maximum recursion depth")&&(s.push("Try reducing the maxDepth with setMaxDepth()"),s.push("Check for circular references in your grammar rules"),(null==t?void 0:t.ruleName)&&s.push(`The rule '${t.ruleName}' may be causing infinite recursion`)),i.includes("must return an array")&&(s.push("Function rules must return string arrays"),s.push("Check your function rule implementation")),i.includes("Weights must sum to 1.0")&&(s.push("Ensure all weights in weighted rules add up to exactly 1.0"),s.push("Use helper: weights = [0.5, 0.3, 0.2] for three items")),(i.includes("not found")||i.includes("undefined"))&&(s.push("Check that all referenced rules are defined"),s.push("Use validate() method to find missing rules"),null==t?void 0:t.text)){const e=this.findVariables(t.text).filter(e=>!this.hasRule(e));e.length>0&&s.push(`Missing rules detected: ${e.join(", ")}`)}if(s.length>0&&(r+="\n\nSuggestions:\n"+s.map(e=>`• ${e}`).join("\n")),null==t?void 0:t.text){const e=this.validate();e.isValid||(r+="\n\nValidation Issues:\n",e.missingRules.length>0&&(r+=`• Missing rules: ${e.missingRules.join(", ")}\n`),e.circularReferences.length>0&&(r+=`• Circular references: ${e.circularReferences.join(", ")}\n`))}return r}calculateRuleComplexity(e,t=new Set,i=50){const r=[],s=new Set;let n="unknown",a=1,o=!0;if(!this.hasRule(e))throw new Error(`Rule '${e}' does not exist`);if(t.has(e))return r.push(`Circular reference detected for rule '${e}'`),{ruleName:e,complexity:1,ruleType:"circular",isFinite:!0,variables:[],depth:t.size,warnings:r};if(t.size>=i)return r.push(`Maximum depth (${i}) reached, complexity may be underestimated`),{ruleName:e,complexity:1,ruleType:"max-depth",isFinite:!0,variables:[],depth:t.size,warnings:r};const l=new Set(t);return l.add(e),e in this.grammar?(n="static",a=this.calculateStaticRuleComplexity(e,l,i,s,r)):this.weightedRules.has(e)?(n="weighted",a=this.calculateWeightedRuleComplexity(e,l,i,s,r)):this.functionRules.has(e)?(n="function",a=Number.POSITIVE_INFINITY,o=!1,r.push(`Function rule '${e}' has infinite complexity (cannot be calculated)`)):this.conditionalRules.has(e)?(n="conditional",a=this.calculateConditionalRuleComplexity(e,l,i,s,r)):this.sequentialRules.has(e)?(n="sequential",a=this.calculateSequentialRuleComplexity(e,l,i,s,r)):this.rangeRules.has(e)?(n="range",a=this.calculateRangeRuleComplexity(e)):this.templateRules.has(e)&&(n="template",a=this.calculateTemplateRuleComplexity(e,l,i,s,r)),{ruleName:e,complexity:a,ruleType:n,isFinite:o,variables:Array.from(s),depth:t.size,warnings:r}}calculateStaticRuleComplexity(e,t,i,r,s){const n=this.grammar[e];let a=0;for(const o of n){const n=this.findVariables(o);if(0===n.length)a+=1;else{let o=1;for(const a of n)if(r.add(a),t.has(a))s.push(`Circular reference detected for rule '${a}'`),o*=1;else if(t.size>=i)s.push(`Maximum depth (${i}) reached while analyzing '${a}', complexity may be underestimated`),o*=1;else if(this.hasRule(a)){const e=this.calculateRuleComplexity(a,t,i);if(!e.isFinite)return Number.POSITIVE_INFINITY;o*=e.complexity,s.push(...e.warnings)}else s.push(`Missing rule '${a}' referenced in '${e}'`),o*=1;a+=o}}return a}calculateWeightedRuleComplexity(e,t,i,r,s){const n=this.weightedRules.get(e);let a=0;for(const o of n.values){const n=this.findVariables(o);if(0===n.length)a+=1;else{let o=1;for(const a of n)if(r.add(a),t.has(a))s.push(`Circular reference detected for rule '${a}'`),o*=1;else if(t.size>=i)s.push(`Maximum depth (${i}) reached while analyzing '${a}', complexity may be underestimated`),o*=1;else if(this.hasRule(a)){const e=this.calculateRuleComplexity(a,t,i);if(!e.isFinite)return Number.POSITIVE_INFINITY;o*=e.complexity,s.push(...e.warnings)}else s.push(`Missing rule '${a}' referenced in '${e}'`),o*=1;a+=o}}return a}calculateConditionalRuleComplexity(e,t,i,r,s){const n=this.conditionalRules.get(e);let a=0;for(const o of n.conditions){const n=o.then||o.default||[];for(const o of n){const n=this.findVariables(o);if(0===n.length)a+=1;else{let o=1;for(const a of n)if(r.add(a),this.hasRule(a)){const e=this.calculateRuleComplexity(a,t,i);if(!e.isFinite)return Number.POSITIVE_INFINITY;o*=e.complexity,s.push(...e.warnings)}else s.push(`Missing rule '${a}' referenced in '${e}'`),o*=1;a+=o}}}return a}calculateSequentialRuleComplexity(e,t,i,r,s){const n=this.sequentialRules.get(e);let a=0;for(const o of n.values){const n=this.findVariables(o);if(0===n.length)a+=1;else{let o=1;for(const a of n)if(r.add(a),this.hasRule(a)){const e=this.calculateRuleComplexity(a,t,i);if(!e.isFinite)return Number.POSITIVE_INFINITY;o*=e.complexity,s.push(...e.warnings)}else s.push(`Missing rule '${a}' referenced in '${e}'`),o*=1;a+=o}}return a}calculateRangeRuleComplexity(e){const t=this.rangeRules.get(e),i=t.step||1;return Math.floor((t.max-t.min)/i)+1}calculateTemplateRuleComplexity(e,t,i,r,s){const n=this.templateRules.get(e),a=this.findVariables(n.template);let o=1;for(const l of a)if(r.add(l),n.variables[l])o*=n.variables[l].length;else if(this.hasRule(l)){const e=this.calculateRuleComplexity(l,t,i);if(!e.isFinite)return Number.POSITIVE_INFINITY;o*=e.complexity,s.push(...e.warnings)}else s.push(`Missing rule '${l}' referenced in template '${e}'`),o*=1;return o}calculateTotalComplexity(e=50){const t=new Set([...Object.keys(this.grammar),...Array.from(this.functionRules.keys()),...Array.from(this.weightedRules.keys()),...Array.from(this.conditionalRules.keys()),...Array.from(this.sequentialRules.keys()),...Array.from(this.rangeRules.keys()),...Array.from(this.templateRules.keys())]),i=[],r=[],s=[];let n=0,a=!0;for(const o of t)try{const t=this.calculateRuleComplexity(o,new Set,e);i.push(t),t.isFinite?n+=t.complexity:a=!1,r.push(...t.warnings),t.warnings.some(e=>e.includes("Circular reference"))&&s.push(o)}catch(e){r.push(`Error calculating complexity for rule '${o}': ${e}`),i.push({ruleName:o,complexity:1,ruleType:"error",isFinite:!0,variables:[],depth:0,warnings:[`Error: ${e}`]})}const o=Array.from(new Set(r)),l=Array.from(new Set(s)),u=[...i].filter(e=>e.isFinite).sort((e,t)=>t.complexity-e.complexity).slice(0,5),h=i.filter(e=>e.isFinite),c=h.length>0?h.reduce((e,t)=>e+t.complexity,0)/h.length:0;return{totalComplexity:a?n:Number.POSITIVE_INFINITY,isFinite:a,ruleCount:t.size,complexityByRule:i,averageComplexity:c,mostComplexRules:u,warnings:o,circularReferences:l}}}t.Parser=i},"./src/index.ts":function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__exportStar||function(e,t){for(var i in e)"default"===i||Object.prototype.hasOwnProperty.call(t,i)||r(t,e,i)};Object.defineProperty(t,"__esModule",{value:!0}),t.StoryGrammar=t.BasicEnglishModifiers=t.AllEnglishModifiers=t.PunctuationCleanupModifier=t.EnglishVerbAgreementModifier=t.EnglishPossessiveModifier=t.EnglishCapitalizationModifier=t.EnglishOrdinalModifier=t.EnglishPluralizationModifier=t.EnglishArticleModifier=t.Parser=void 0;var n=i("./src/Parser.ts");Object.defineProperty(t,"Parser",{enumerable:!0,get:function(){return n.Parser}}),s(i("./src/types.ts"),t);var a=i("./src/EnglishModifiers.ts");Object.defineProperty(t,"EnglishArticleModifier",{enumerable:!0,get:function(){return a.EnglishArticleModifier}}),Object.defineProperty(t,"EnglishPluralizationModifier",{enumerable:!0,get:function(){return a.EnglishPluralizationModifier}}),Object.defineProperty(t,"EnglishOrdinalModifier",{enumerable:!0,get:function(){return a.EnglishOrdinalModifier}}),Object.defineProperty(t,"EnglishCapitalizationModifier",{enumerable:!0,get:function(){return a.EnglishCapitalizationModifier}}),Object.defineProperty(t,"EnglishPossessiveModifier",{enumerable:!0,get:function(){return a.EnglishPossessiveModifier}}),Object.defineProperty(t,"EnglishVerbAgreementModifier",{enumerable:!0,get:function(){return a.EnglishVerbAgreementModifier}}),Object.defineProperty(t,"PunctuationCleanupModifier",{enumerable:!0,get:function(){return a.PunctuationCleanupModifier}}),Object.defineProperty(t,"AllEnglishModifiers",{enumerable:!0,get:function(){return a.AllEnglishModifiers}}),Object.defineProperty(t,"BasicEnglishModifiers",{enumerable:!0,get:function(){return a.BasicEnglishModifiers}});var o=i("./src/Parser.ts");Object.defineProperty(t,"StoryGrammar",{enumerable:!0,get:function(){return o.Parser}})},"./src/types.ts":(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})}},t={};return function i(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r].call(n.exports,n,n.exports,i),n.exports}("./src/index.ts")})());
//# sourceMappingURL=story-grammar.bundle.js.map